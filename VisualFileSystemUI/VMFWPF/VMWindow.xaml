<fl:FrameLessWindow x:Class="VMFWPF.VMWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:fl="clr-namespace:FrameLessWindow;assembly=FrameLessWindow"
        xmlns:fs="clr-namespace:FrameSlecteListView;assembly=FrameSlecteListView"
        xmlns:sb="clr-namespace:SearchBox;assembly=SearchBox"
        xmlns:eb="clr-namespace:VMControls;assembly=VMControls"
        xmlns:local="clr-namespace:VMFWPF"
        mc:Ignorable="d"
                    Title="虚拟磁盘系统"
                    Foreground="{DynamicResource IconForeground}"
                    Height="450" Width="800" 
                    MinHeight="200" MinWidth="200"
                    ResizeMode="CanResizeWithGrip"
        ToolBarHeight="32" StateBarHeight="32" 
                    BorderBrush="#FF007ACC"
                    ShadowColor="#FF007ACC"
                    Background="#FF2D2D30">

    <fl:FrameLessWindow.Resources>

        
        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="{DynamicResource IconForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border>
                                <ToggleButton Name="display_popup" Background="Transparent"
                                              RenderTransformOrigin="0.5,0.5"  BorderThickness="0"  Focusable="True">
                                    <ToggleButton.RenderTransform>
                                        <RotateTransform Angle="0"></RotateTransform>
                                    </ToggleButton.RenderTransform>
                                    <TextBlock Foreground="{TemplateBinding Foreground}" Text=">" ></TextBlock>
                                </ToggleButton>
                            </Border>
                            <Popup Placement="Bottom" AllowsTransparency="True" HorizontalOffset="16" VerticalOffset="8"
                                IsOpen="{Binding IsChecked,ElementName=display_popup,Mode=TwoWay}" 
                                StaysOpen="{Binding IsFocused,RelativeSource={RelativeSource Mode=Self}}" Focusable="True">
                                <Border Margin="4" BorderThickness="0">
                                    <ListView ItemsSource="{TemplateBinding ItemsSource}" 
                                              Background="{DynamicResource IconBackground}"
                                              Width="200" BorderThickness="0"
                                              ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ListView.ItemTemplate>
                                            <DataTemplate DataType="{x:Type eb:VMNode}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Height="20" Source="{Binding Converter={StaticResource StringTypeToIconConvert},ConverterParameter=0,FallbackValue={StaticResource DefaluteSmallIcon}}"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Name}" Style="{StaticResource IconText}" FontSize="12" FontWeight="Normal" ></TextBlock>
                                                </Grid>
                                                
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <MultiTrigger >
                                <MultiTrigger.Conditions>
                                    <Condition  Property="IsFocused" Value="False" SourceName="display_popup"></Condition>
                                    <Condition Property="IsFocused" Value="False" SourceName="display_popup"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="IsChecked" Value="False" TargetName="display_popup"></Setter>
                            </MultiTrigger>
                            
                            
                            <Trigger Property="IsChecked" Value="True" SourceName="display_popup">
                                <Setter Property="RenderTransform" TargetName="display_popup">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"></RotateTransform>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </fl:FrameLessWindow.Resources>
    
    <fl:FrameLessWindow.TitleBarContext>
        <TextBlock Text="虚拟磁盘系统" VerticalAlignment="Center" Margin="10,0" Foreground="Gray"/>
    </fl:FrameLessWindow.TitleBarContext>
    
    <fl:FrameLessWindow.ToolBarExContent>
        <Menu Foreground="{DynamicResource IconForeground}" Background="Transparent" BorderBrush="Black" BorderThickness="0,0,0,1">
            <MenuItem Header="文件" Height="32">
                <MenuItem Header="打开"
                          IsEnabled="{Binding DataContext.OpenSuccesed,Converter={StaticResource EqualToBool},ConverterParameter=False}"
                          Command="{Binding DataContext.SystemCommand}"
                          CommandParameter="Open"></MenuItem>
                <Separator Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="新建"
                          Command="{Binding DataContext.SystemCommand}"
                          CommandParameter="CreateNew">
                </MenuItem>
                <MenuItem Header="格式化"
                          IsEnabled="{Binding DataContext.OpenSuccesed,Converter={StaticResource EqualToBool},ConverterParameter=True}"
                          Command="{Binding DataContext.SystemCommand}"
                          CommandParameter="Format">
                </MenuItem>
                <Separator Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="关闭"               
                          IsEnabled="{Binding DataContext.OpenSuccesed,Converter={StaticResource EqualToBool},ConverterParameter=True}"
                          Command="{Binding DataContext.SystemCommand}"
                          CommandParameter="Close"></MenuItem>
                <Separator  Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="退出"
                          Command="{Binding DataContext.SystemCommand}"
                          CommandParameter="Exite"></MenuItem>
            </MenuItem>
           
            <MenuItem Header="编辑">
                <MenuItem Header="导出到..."
                          IsEnabled="{Binding DataContext.CurrentNode,Converter={StaticResource EqualToBool},ConverterParameter=VM}"
                          Command="{Binding DataContext.NodeCommand}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource DoNothingMultiConvert}">
                            <Binding Source="Export"></Binding>
                            <Binding  ElementName="Main_List" Path="SelectedItems"></Binding>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <Separator  Style="{StaticResource CustomSeparator}"/>
                <MenuItem Header="导入..."
                          IsEnabled="{Binding DataContext.CurrentNode,Converter={StaticResource EqualToBool},ConverterParameter=VM}"
                          >
                    <MenuItem Header="文件" Command="{Binding DataContext.NodeCommand}" CommandParameter="Inport"/>
                    <MenuItem Header="文件夹" Command="{Binding DataContext.NodeCommand}" CommandParameter="InportFloders"/>
                </MenuItem>
            </MenuItem>
        </Menu>

    </fl:FrameLessWindow.ToolBarExContent>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource IconButton}" 
                        Command="{Binding DataContext.NodeCommand}" 
                        CommandParameter="GoBack"
                        Content="{StaticResource GoBack}"></Button>
                <Button Style="{StaticResource IconButton}" 
                        Command="{Binding DataContext.NodeCommand}" 
                        CommandParameter="GoForward"
                        Content="{StaticResource GoBack}" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <RotateTransform Angle="180"></RotateTransform>
                    </Button.RenderTransform>
                </Button>
                <Button Style="{StaticResource IconButton}" 
                    Command="{Binding DataContext.NodeCommand}" 
                    CommandParameter="GoUp"
                        Content="{StaticResource GoUp}"></Button>
            </StackPanel>

            <Grid Grid.Column="1" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                
                <ProgressBar Visibility="Hidden" Grid.ColumnSpan="2" Maximum="1" Value="0.8"></ProgressBar>

                <StackPanel Orientation="Horizontal">
                    <Image Width="24" Source="{Binding DataContext.CurrentNode,Converter={StaticResource StringTypeToIconConvert},ConverterParameter=0}"></Image>
                    <ComboBox Visibility="Hidden" ></ComboBox>             
                </StackPanel>


                <!--<ScrollViewer Name="Path_Viewer" Grid.Column="1"  CanContentScroll="True"
                              Background="Transparent" HorizontalAlignment="Stretch"
                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled">
                    
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ScrollChanged" SourceName="Path_Viewer">
                            <i:InvokeCommandAction Command="{Binding DataContext.ProcessCommand}"
                                                   CommandParameter="{Binding ElementName=Path_Viewer}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    <StackPanel  Orientation="Horizontal" >
                        <eb:ExButton DisplayName="哈啊哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈啊哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈啊哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈啊哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="啊哈哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="啊哈哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="啊哈aaaaaaaaaaaaaaaaaaaaaaaaaaaa哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈哈" ChildVisiable="Visible"></eb:ExButton>
                        <eb:ExButton DisplayName="哈哈" ChildVisiable="Visible"></eb:ExButton>
                    </StackPanel>
                </ScrollViewer>-->

                <Grid  Grid.Column="1"  Name="History_List" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <ListView Name="Path_Viewer"
                              Background="Transparent" 
                              HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch"
                              BorderThickness="0"
                              ItemsSource="{Binding DataContext.CurrentNode,Converter={StaticResource NodeToPathView}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded" SourceName="Path_Viewer">
                                <i:InvokeCommandAction Command="{Binding DataContext.ProcessCommand}"
                                                       CommandParameter="{Binding ElementName=Path_Viewer}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Orientation="Horizontal" Background="Transparent"></StackPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                     
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="{x:Type eb:VMNode}">
                                <eb:ExButton DisplayName="{Binding Name}" 
                                             ChildrenSource="{Binding Children,Converter={StaticResource PathViewDisplayFloderOnly}}" 
                                             OnEnterTarget="GoToTarget"
                                             Background="Transparent"
                                             Visibility="Visible"
                                             Foreground="{DynamicResource IconForeground}"
                                             >
                                    <eb:ExButton.ChildVisiable>
                                        <MultiBinding Converter="{StaticResource PathViewChildrenListVisiable}">
                                            <Binding ></Binding>
                                            <Binding Path="CurrentNode" RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                        </MultiBinding>
                                    </eb:ExButton.ChildVisiable>
                                
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="OnEnterTarget">
                                            <ie:CallMethodAction TargetObject="{Binding }" MethodName="GoTOTarget" ></ie:CallMethodAction>

                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                </eb:ExButton>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                
                    <ToggleButton Grid.Column="1" Width="24"
                                  BorderThickness="0"
                                  RenderTransformOrigin="0.5,0.5"
                                  Name="Open_HistoryList" >
                        <ToggleButton.RenderTransform>
                            <RotateTransform Angle="180"></RotateTransform>
                        </ToggleButton.RenderTransform>
                        <ToggleButton.Content>
                            <TextBlock Text="{StaticResource PullUp}" 
                                     Style="{StaticResource IconText}"
                                     Background="Transparent"/>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <Popup Grid.Column="1" AllowsTransparency="True"
                           IsOpen="{Binding Path=IsChecked,ElementName=Open_HistoryList,Mode=TwoWay}" 
                           StaysOpen="False"
                           HorizontalOffset="-35"
                           Tag="{Binding PlacementTarget.ActualWidth,RelativeSource={RelativeSource Mode=Self}}"
                           DataContext="{Binding PlacementTarget.DataContext,RelativeSource={RelativeSource Mode=Self}}"
                           PlacementTarget="{Binding ElementName=History_List}" Placement="Bottom">
                        <ListBox ItemsSource="{Binding DataContext.History}" 
                                 ItemTemplate="{StaticResource  HistoryListDataStyle}"
                                 ItemContainerStyle="{StaticResource HistoryListItemStyle}"
                                 MaxHeight="300" SelectionMode="Single"
                                 Background="{DynamicResource IconBackground}"
                                 Foreground="{DynamicResource IconForeground}"
                                 BorderThickness="1,0,1,1"
                                 Width="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType=Popup}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <ie:CallMethodAction MethodName="History_List_SelectionChanged" TargetObject="{Binding }"></ie:CallMethodAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Popup>

                    <Button Grid.Column="2" Style="{StaticResource IconButton}" 
                            Content="{StaticResource Refreash}"
                            Command="{Binding DataContext.NodeCommand}"
                            CommandParameter="Refresh"/>
                </Grid>

            </Grid>

            <sb:SearchBox Grid.Column="2" Width="200" Background="Transparent" CornerRadius="0" 
                          RealTimeSearch="False"
                          Foreground="{DynamicResource IconForeground}" >
                <sb:SearchBox.SearchIcon>
                    <TextBlock Style="{StaticResource IconText}" Text="{StaticResource Search}" FontSize="14" FontWeight="Light"></TextBlock>
                </sb:SearchBox.SearchIcon>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="OnSearchClick">
                        <i:InvokeCommandAction Command="{Binding DataContext.NodeCommand,RelativeSource= {RelativeSource AncestorType=Window}}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource DoNothingMultiConvert}">
                                    <Binding Source="Search"/>
                                    <Binding Path="SearchText" RelativeSource="{RelativeSource AncestorType={x:Type sb:SearchBox}}"></Binding>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </sb:SearchBox>
        </Grid>
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"></ColumnDefinition>
                <ColumnDefinition Width="3"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <TreeView Name="Side_List"
                      BorderThickness="0"
                      Foreground="White"
                      ItemsSource="{Binding DataContext.IndexViewTree}"
                      ItemTemplate="{StaticResource SideListDataStyle}"
                      ItemContainerStyle="{StaticResource SideListItemStyle}"
                      VirtualizingStackPanel.IsVirtualizing="True" 
                      VirtualizingStackPanel.VirtualizationMode="Recycling" Background="#FF1E1E1E"
                      >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged" SourceName="Side_List">
                        <i:InvokeCommandAction Command="{Binding DataContext.NodeCommand,RelativeSource={RelativeSource AncestorType=Window}}">
                            <i:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource DoNothingMultiConvert}">
                                    <Binding Source="SideSelected"/>
                                    <Binding Path="SelectedItem" ElementName="Side_List" ></Binding>
                                </MultiBinding>
                            </i:InvokeCommandAction.CommandParameter>
                        </i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
            
            <GridSplitter Grid.Column="1" BorderThickness="0"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF3E3E42"></GridSplitter>
            
            <fs:FrameSelectedListView Name="Main_List" Grid.Column="2" 
                                      FrameSelectMode="True" 
                                      AllowDrop="True" 
                                      Focusable="True"
                                      Style="{StaticResource MainListStyle_}"
                                      ItemsSource="{Binding CurrentNode.Children}"
                                      ItemContainerStyle="{StaticResource MainListItemStyle}"
                                      ItemTemplateSelector="{StaticResource MainListItemSelecter}" Background="#FF1E1E1E">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Drop" SourceName="Main_List">
                        <ie:CallMethodAction MethodName="Main_List_Drop" TargetObject="{Binding }"></ie:CallMethodAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </fs:FrameSelectedListView>
        </Grid>
        
    </Grid>


    <fl:FrameLessWindow.StateBarExContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <ResizeGrip Grid.Column="2"></ResizeGrip>
        </Grid>
    </fl:FrameLessWindow.StateBarExContent>
    
</fl:FrameLessWindow>
